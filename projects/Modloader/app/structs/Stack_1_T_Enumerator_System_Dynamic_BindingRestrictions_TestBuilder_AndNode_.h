#include <Modloader/app/il2cpp_internals.h>
#ifdef IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__INITIALIZING
#elif defined(IL2CPP_STRUCTS_INITIALIZING)
#define IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__INITIALIZING
#if !defined(IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__DEFINED)
#include <Modloader/app/structs/BindingRestrictions_TestBuilder_AndNode.h>
#if defined(IL2CPP_STRUCT_BindingRestrictions_TestBuilder_AndNode_DEFINED)
#define IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__DEFINED
struct Stack_1_System_Dynamic_BindingRestrictions_TestBuilder_AndNode_;
struct Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode_ {
    struct Stack_1_System_Dynamic_BindingRestrictions_TestBuilder_AndNode_* _stack;
    int32_t _version;
    int32_t _index;
    struct BindingRestrictions_TestBuilder_AndNode _currentElement;
};
#endif
#endif
#if !defined(IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__FWDDECL)
#define IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__FWDDECL
#include <Modloader/app/structs/Stack_1_System_Dynamic_BindingRestrictions_TestBuilder_AndNode_.h>
#endif
#undef IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__INITIALIZING
#if !defined(IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__DEFINED) && !defined(IL2CPP_STRUCT_Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode__FWDDECL)
#include <Modloader/app/structs/Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode_.h>
#endif
#else
namespace app {
#define IL2CPP_STRUCTS_INITIALIZING
#include <Modloader/app/structs/Stack_1_T_Enumerator_System_Dynamic_BindingRestrictions_TestBuilder_AndNode_.h>
#undef IL2CPP_STRUCTS_INITIALIZING
} // namespace app
#endif
